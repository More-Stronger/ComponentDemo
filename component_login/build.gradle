if (component_login_alone_run.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion compile_sdk_version.toInteger()

    defaultConfig {
        if (component_login_alone_run.toBoolean()) {
            applicationId "com.morestronger.component_login"
        }
        minSdkVersion min_sdk_version.toInteger()
        targetSdkVersion target_sdk_version.toInteger()
        versionCode version_code.toInteger()
        versionName version_name.toString()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // 动态切换 lib 和 Application 的配置文件.
    sourceSets {
        main {
            if (component_login_alone_run.toBoolean()) {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "androidx.appcompat:appcompat:${androidx_appcompat_version}"
    implementation "androidx.constraintlayout:constraintlayout:${androidx_constraintlayout_version}"
    implementation project(path: ':middleware')
}
